	if (!fork())
	{
		if (pi == FPIPE)
		{
			dup2(g_fd[1][1], STDOUT_FILENO);
			close(g_fd[0][0]);
			close(g_fd[0][1]);
			close(g_fd[1][0]);
			close(g_fd[2][0]);
			close(g_fd[2][1]);
		}
		else if (pi == PIPE)
		{
			dup2(g_fd[2][1], STDOUT_FILENO);
			dup2(g_fd[1][0], STDIN_FILENO);
			close(g_fd[0][0]);
			close(g_fd[0][1]);
			close(g_fd[1][1]);
			close(g_fd[2][0]);
		}
		else if (pi == EPIPE)
		{
			dup2(g_fd[2][0], STDIN_FILENO);
			close(g_fd[0][0]);
			close(g_fd[0][1]);
			close(g_fd[1][0]);
			close(g_fd[1][1]);
			close(g_fd[2][1]);
		}
		if (execve (cmd->arg[0], ppp, NULL) == -1)
		{
			if (execve (ft_strjoin("/bin/", cmd->arg[0]), ppp, NULL) == -1)
			{
				if (execve (ft_strjoin("/usr/bin/", cmd->cmd), ppp, NULL) == -1)
				{
					printf("\e[0;31mminishell: command not found\n");
					exit (0);
				}
			}
		}
	}
	if (pi == EPIPE)
		close(g_fd[2][0]);
	else if (pi == FPIPE)
		close(g_fd[1][1]);
	else if (pi == PIPE)
	{
		close(g_fd[2][1]);
		close(g_fd[1][0]);
	}
	wait(0);
}